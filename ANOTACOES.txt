				***CURSO DE MODELAGEM DE DADOS DO CANAL BÓSON TREINAMENTOS***

*DADOS X INFORMAÇÃO:

- Dados: São fatos em uma forma primária, que podem ser armazenados em algum meio.
EX.: CPF, Nome, Data.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
- Informação: São os fatos organizados de maneira a produzir um significado -> Dados colocados em contexto.
EX.: Lista de clientes com seus números de COF, ordenados.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
-Metadados: Definimos Metadados como sendo "Dados sobre dados". Permitem efetuar a representação e identificação dos dados, garantindo sua consistência e persistência. Os Metadados são mantidos no Dicionário de Dados (ou em um Catálogo de Dados).
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
- Bancos de Dados: Um Banco de Dados (BD) é uma coleção organizada de dados. Esses dados são organizados de modo a modelar aspectos do mundo real, para que seja possível efetuar processamento que gere informações relevantes para os usuários a partir desses dados. Um BD é composto por diversos objetos, tais como: tabelas, esquemas, visões, consultas, relatórios, procedimentos, triggers, entre outros.
-Aplicações dos Bancos de Dados: Bancos de dados encontram aplicações em inúmeras áreas, como:

# Sistemas Bancários
# Reservas em hotés
# Controle de estoque em supermercados
# Catálogo de livros em bibliotecas
# E-commerce
# Receita Federal
# YouTube
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

- SGBD - Sistema de Gerenciamento de Bancos de Dados: Um SGBD é uma coleção de softwares que permite aos usuários criarem e manterem um ou mais bancos de dados. São usados nas tarefas de definição,  construção, manipulação e compartilhamento dos bancos de dados entre aplicações e usuários. Permitem proteger o banco de dados e mantê-lo ao longo do tempo. Exemplos de SGBDs:
# Oracle Database
# Microsoft SQL Server
# MySQL
# IBM DB2
# SAP Sybase
# MongoDB
# Teradata
# PostgreSQL
# SQLite
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

- SISTEMA DE BANCOS DE DADOS: Usuários --> Aplicativos de Acesso --> SGBD(Manipulação/Consultas/Definição de Dados) --> Banco de Dados + Metadados.

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

- USUÁRIOS DE BANCOS DE DADOS: 
# Administrador (DBA)
# Projetista / Desenvolvedor
# Usuário Final
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

- CARACTERÍSTICAS E FUNCIONALIDADES:

# Controle de Redundância (Evitar duplicidades dos dados).

# Múltiplas Visões dos Dados (Exibir as informações de formas distintas para os usuários, dependendo de quem e como se quer ver aquela informação).

# Controle de Concorrência (Gerencia o acesso simultâneo aos dados por múltiplos usuários, garantindo consistência, integridade e desempenho, evitando conflitos como leituras e gravações inconsistentes).

# Backup e Restauração (Envolvem a criação de cópias de segurança dos dados para proteger contra perda e a recuperação dessas cópias em caso de falhas ou corrupção, garantindo a continuidade dos serviços.)

# Autenticação e Autorização de acesso (Somente usuários autorizados tenham o acesso aos dados).

# Restrições de Integridade (Garantem a precisão, consistência e validade dos dados, impondo regras como chaves primárias, estrangeiras e verificações para evitar entradas inválidas ou conflitantes.)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

* MODELOS DE BANCO DE DADOS (Históricos)

- Modelo Hierárquico: Neste modelo os dados são organizados de forma hierárquica, com  conjuntos de tipos de registros interconectados por meio de ligações. Uma ligação representa uma relação entre dois tipos de registros: pai e filho. Um esquema no modelo hierárquico é um diagrama de estrutura em árvore. O acesso aos dados é sempre unidirecional, a partir do pai ao filho.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

- Modelo de Rede: No modelo em Redes os dados são organizados em tipos e ligações entre dois registros. Não há restrição hierárquica. Tanto o esquema quanto ocorrências de dados são visualizados como um grafo direcionado.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

- Modelo Relacional: Neste modelo os dados são separados em entidades, conforme cada assunto,  e registrados como atributos dessas entidades. As entidades se relacionam entre si e permitem que os dados sejam armazenados e recuperados de forma rápida e segura.
_______________________________________________________________________________________________________________________________________________________________________

* MODELOS DE DADOS: Um modelo é uma estrutura que ajuda a comunicar os conceitos que estão na mente do projetista. Podemos usá-los para tarefas como descrever, analisar, especificar e comunicar ideias. O modelo deve possuir detalhes suficientes para que um desenvolvedor consiga construir o banco de dados de acordo com a necessidade do projeto.

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

* MODELAGEM DE DADOS: Modelagem de dados é o processo de criação de um Modelo de Dados para um sistema de informação, com a aplicação de técnicas específicas de modelagem.
Trata-se de processos para definir e analisar requisitos de dados necessários para suportar processos de negócio com sistemas informatizados em organizações. Um modelo de dados fornece uma estrutura para os dados usados em um SI, com definições e formatos específicos.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

* MODELOS DE DADOS:
- Hierárquico
- Rede
- Relacional
- Orientado a Objeto
- Não-Relacional
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

* MODELO RELACIONAL: Os princípios do modelo relacional foram esboçados por E.F. Codd (IBM) em um artigo publicado em junho de 1970, intitulado "A Relational Model of Data for Large Shared Data Banks", no qual o Dr.Codd propôs o modelo relacional para sistemas de bancos de dados. Antes disso eram usados modelos como o hierárquico e o modelo em rede.

- No modelo relacional os dados são organizados em coleções de tabelas bidimensionais.
- Essas tabelas são também chamadas de "Relações".
- Relação é uma forma de se organizar os dados em linhas e colunas.
- Baseado em lógica e teoria de conjunto.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
* COMPONENTES DO MODELO RELACIONAL: O modelo relacional é composto, basicamente por:
- Coleções de objetos ou relações que armazenam os dados.
- Um conjunto de operadores que agem nas relações, produzindo outras relações.
- Integridade de dados, para precisão e consistência.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

* BANCO DE DADOS RELACIONAL: Um banco de dados relacional é uma coleção de relações, que são tabelas bidimensionais, onde os dados são armazenados. Como exemplo, podemos querer armazenar dados sobre os clientes de uma loja. Para isso, criamos tabelas para guardar diferentes conjuntos de dados relacionados a esses, como dados pessoais, dados de compras, crédito, e outras.

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
* COMPONENTES DE UM BANCO DE DADOS RELACIONAL: 
- TABELA: Estrutura básica de armazenamento no SGBDR. Armazena todos os dados necessários sobre algo do mundo real, como clientes, pedidos ou produtos. Também chamada de Relação. Um banco de dados relacional pode conter uma ou mais Tabelas.

- TUPLA: Ou Linha / Registro, representa todos os dados requeridos por uma determinada ocorrência de entidade em particular. Por exemplo, os dados de um cliente específico. Cada linha em uma tabela deve ser identificada por uma chave primária,  de modo a não haver duplicação de registros.

- COLUNA: Unidade que armazena um tipo específico de dado (valor) - ou não armazena nada, com valor nulo. Esta é uma coluna não-chave, significando que seu valor pode se repetir em outras linhas da tabela.

- RELACIONAMENTO: Associação entre as entidades (tabelas), conectadas por chaves primárias e chaves estrangeiras.

- OUTROS: Índices. SP(Stored Procedures), Trigger, etc.

- CHAVE PRIMÁRIA: Coluna (atributo) que identifica um registro de forma exclusiva na tabela. Por exemplo, o CPF de um cliente, contendo um valor que não se repete na relação.

- CHAVE ESTRANGEIRA: Coluna que define como as tabelas se relacionam umas com as outras. Uma FK se refere a uma PK ou a uma chave única em outra tabela (ou na mesma tabela!). Por exemplo, na tabela de pedidos podemos ter uma chave estrangeira efetuando o relacionamento com a chave primária na tabela de clientes.

_______________________________________________________________________________________________________________________________________________________________________

* ANÁLISE DE REQUISITOS: Nesta fase, são realizadas reuniões para coleta de informações,  que analisam o que é exigido para o banco de dados a ser criado.
Os processos de negócio são definidos,  e as entidades, atributos e relacionamentos do BD são documentadas.
A análise é extremamente importante para o sucesso do projeto do BD.
_______________________________________________________________________________________________________________________________________________________________________

* MODELO ENTIDADE-RELACIONAMENTO: MER, cria um diagrama entidade-relacionamento a partir das especificações do negócio ou narrativas do usuário. Permite ilustrar as entidades em um negócio e também relacionamentos entre elas. Construímos o MER durante a fase de análise no ciclo de vida de desenvolvimento do sistema. Um MER separa a informação que é necessária ao negócio,  das atividades que são realizadas no negócio.

* COMPONENTES DO MER:
- ENTIDADE: Algo significativo, sobre o qual devemos possuir informações. Como exemplos, temos clientes, funcionários, pedidos e produtos.

- ATRIBUTO: Algo que descreve ou qualifica uma entidade. P.ex., a entidade cliente possui atributos que descrevem seu nome, endereço, telefone, número de identificação, entre outros. Atributos podem ser obrigatórios ou opcionais.

- RELACIONAMENTO: Trata-se de uma associação nomeada entre entidades, com um grau de associação. Por exemplo clientes podem estar associados a pedidos.
_______________________________________________________________________________________________________________________________________________________________________

* CONVENÇÕES PARA MODELAGEM DE ENTIDADES, RELACIONAMENTOS E ATRIBUTOS:
- ENTIDADES: Nome único, singular; em caixa alta;
- ATRIBUTOS: nome no singular; caixa baixa; atributos obrigatórios marcados com '*'; identificador único marcado com '#'.
- RELACIONAMENTOS: nome identificador (verbo); opcionalidade ("deve ser" ou "pode ser"); grau ou cardinalidade ('um e apenas um', 'um ou mais').

CARDINALIDADE: Significa que cada entidade pode ser ou deve em relação de forma uma e apenas uma ou uma ou mais com outra entidade.
_______________________________________________________________________________________________________________________________________________________________________

* IDENTIFICADOR ÚNICO (UID): Um identificador único é qualquer combinação de atributos ou relacionamentos que são uados para distinguir ocorrências de uma entidade. Cada ocorrência da entidade deve ser identificável de forma exclusiva.
_______________________________________________________________________________________________________________________________________________________________________

* MODELOS CONCEITUAL, LÓGICO E FÍSICO:

* MODELAGEM DE DADOS - NÍVEIS: Classificamos o processo de modelagem de dados em três níveis:
- Modelo Conceitual (alto nível) - MCD.
- Modelo lógico - MLD.
- Modelo Físico (baixo nível) - MFD.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

* MODELO CONCEITUAL: Esta é a primeira fase da modelagem, onde representaremos o mundo real por meio de uma visão simplificada dos dados e seus relacionamentos. Assim poderemos determinar quais informações serão armazenadas no BD. Neste nível o projeto é independente de SGBD.
EXEMPLO: Cadastro de  produtos de uma loja
Dados necessários: Nome de produto, categoria de produto (limpeza, higiene, etc), código do fornecedor, tipo de embalagem, tamanho, quantidade.
Neste nível, detalhes da implementação não aparecem, porém é suficientemente detalhado para a ponto de ser possível descrever os tipos de dados requeridos, seus relacionamentos entre si e regras de consistência.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

* MODELO LÓGICO: Um modelo lógico possui conceitos que os usuários são capazes de entender,  ao mesmo tempo em que não está distante do modelo físico do banco de dados. Neste nível o projeto é independente de SGBD.
Consiste na especificação lógica dos dados em um formato adequado ao SGBD escolhido. Os tipos dedados são completamente definidos.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

* MODELO FÍSICO: A partir de um modelo lógico nós derivamos o modelo físico, onde se detalham os componentes de estrutura física do banco de dados, incluindo as tabelas, campos, tipos de valores, restrições, etc. Ao criarmos o modelo físico, poderemos partir para a implementação física do banco de dados, utilizando o SGBD mais adequado.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

* ARQUITETURA DE TRÊS NÍVEIS: MUNDO OBSERVADO --> MODELO CONCEITUAL --> MODELO LÓGICO --> MODELO FÍSICO.
_______________________________________________________________________________________________________________________________________________________________________

* ESQUEMA DO BANCO DE DADOS: Um Esquema é uma definição do Banco de Dados especificada durante o projeto, armazenada no Dicionário de Dados. Um Esquema (Schema) raramente muda durante a vida do BD.
Trata-se da organização dos dados em um plano que mostra como o banco é construído. O esquema define tabelas, campos, relacionamentos, visões, funções e muitos outros elementos que compõem o BD.
_______________________________________________________________________________________________________________________________________________________________________

* ESTAPAS DO DESENVOLVIMENTO DE UM BD:

As principais etapas no desenvolvimento de um BD são:

1- Especificação e Análise de Requisitos
   a. Os requisitos são documentados.

2- Projeto Conceitual
   a. Baseado nos requisitos.

3- Projeto Lógico
   a. Expresso em um modelo de dados, como o relacional.

4- Projeto Físico
   a. Especificações para armazenar e acessar o banco de dados.
   b. Implementação do BD, inserção de dados reais e manutenção.
_______________________________________________________________________________________________________________________________________________________________________

* TAREFAS PARA MODELAGEM: As tarefas a seguir devem ser realizadas para que seja possível efetuar modelagem de dados e projeto de BD funcional:
- Identificar os tipos de entidade.
- Identificar atributos.
- Identificar relacionamentos.
- Criar e associar chaves.
- Normalizar para reduzir redundância.
- Desnormalizar para aumentar performance.
_______________________________________________________________________________________________________________________________________________________________________

MER: Após o levantamento dos requisitos, estes são transformados em um Modelo Entidade-Relacionamento (MER), o qual consiste dos seguintes elementos:
- Entidades.
- Relacionamentos.
- Atributos.

O modelo é posteriormente refinado com o uso de técnicas específicas, e finalmente implementado em um banco de dados físico.
_______________________________________________________________________________________________________________________________________________________________________

* MODELO ENTIDADE-RELACIONANENTO: Também conhecido pela sigla MER, trata-se de um modelo conceitual usado para descrever objetos envolvidos no domínio de um sistema a ser construído, incluindo seus atributos e relacionamentos.
O MER permite representar de forma abstrata a estrutura que irá constituir o banco de dados.
É composto pelos seguintes objetos:
- Entidades.
- Atributos.
- Relacionamentos.

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
* MER: Um modelo entidade relacionamento é uma maneira sistemática de descrever e definir um processo de negócio. O processo é modelado como componentes (entidades) que são ligadas umas às outras por relacionamentos que indicam as dependências entre elas.
As entidades podem ter várias propriedades (atributos) que as caracterizam. Diagramas são criados para representar graficamente entidades, atributos e relacionamentos,  denominados Diagramas Entidade-Relacionamento (DER).
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

* MODELO E DIAGRAMA

- Modelo ER (MER): Lista de entidades, atributos e relacionamentos, que traz informações sobre tipos de dados, restrições, descrições de entidades e outras.
- Diagrama ER (DER): Representação gráfica associada ao MER (ou parte dele).
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

* COMPONENTES DO DER:
- Retângulos - Representam entidades.
- Elipses - Representam atributos.
- Losangos - Representam relacionamentos.
- Linhas - Ligam atributos a entidades e entidades a relacionamentos.


+--------------------------+
|                          | 
|                          | --> Retângulo (ENTIDADE)
|                          |
|                          |
+--------------------------+



   *****
 *       *
*         * --> Elipse (ATRIBUTO)
 *       *
   *****


    *
   * *
  *   *
 *     * --> Losango (RELACIONAMENTO)
  *   *
   * *
    *
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

* ENTIDADE: 
- Algo de importância para um usuário ou organização que precisa ser representado em um banco de dados.
- Representa um tema, tópico ou conceito de negócio.
- Cada objeto de uma entidade é denominado de INSTÂNCIA DE ENTIDADE.
- Uma entidade pode ter existência física ou abstrata.
EX: Empregados, Livros, Vendas, Produtos.

- Nomeamos as entidades usando substantivos que representam de forma clara e objetiva sua função.
- Por exemplo, podemos ter em um sistema as entidades Produto, Cliente, Venda, Estoque, Catálogo, entre outras.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

*REPRESENTAÇÃO DE ENTIDADES: Representamos as entidades em um DER por meio de retângulos contendo o nome da entidade.
EX:
+-----------------+     +-----------------+
|                 |     |                 |
|    CLIENTE      |     |    PRODUTO      |
|                 |     |                 |
|                 |     |                 |
+-----------------+     +-----------------+

* ENTIDADES - ALGUMAS REGRAS DE NOMEAÇÃO:
# NOMES DE ENTIDADES:
  - Devem começar com uma letra;
  - Usar palavra no singular;
  - Não podem ter espaços ou alguns caracteres especiais;
  - Alguns caracteres como "$", "#" e "_" são permitidos em alguns bancos de  dados.

# Os nomes de colunas devem ser únicos dentro de uma tabela.
# Os nomes de entidades / tabelas devem ser únicos dentro do esquema.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
* INSTÂNCIA DE ENTIDADE: Uma entidade em si é uma descrição da estrutura e formato das ocorrências da entidade, como uma "receita", ou "planta". Uma instância de entidade é uma ocorrência específica de uma entidade. Instância da entidade são as linhas(os registros).
EX:

(Classe de) Entidade 

Carro
+--------------------------+
|                          | 
| Modelo                   | --> Atributo
| Cor                      | --> Atributo
| Ano                      | --> Atributo
| Placa                    | --> Atributo
+--------------------------+

Instâncias:

1. **Carro 1**:
   - Modelo: Fusca
   - Cor: Azul
   - Ano: 1975
   - Placa: ABC-1234

2. **Carro 2**:
   - Modelo: Corolla
   - Cor: Preto
   - Ano: 2020
   - Placa: XYZ-5678

3. **Carro 3**:
   - Modelo: Uno
   - Cor: Vermelho
   - Ano: 2015
   - Placa: PQR-9876

Esse é o diagrama simples com a entidade Carro e as instâncias. 
_______________________________________________________________________________________________________________________________________________________________________

* ATRIBUTOS:
- Os atributos descrevem características da entidade, como por exemplo: fabricante, modelo, cor, placa, etc.
- Os atributos possuem um tipo de dados (domínio) nome e valor específico.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

* REPRESENTANDO ATRIBUTOS:
- Os atributos podem ser representados por uma elipse contendo o seu nome, ligada à entidade que qualifica.
- Opcionalmente, podemos representar um atributo apenas pelo seu nome ligado à entidade, sem utilizar a elipse.

Departamento----------(Função) (com elipse)

Departamento----------Função (sem elipse)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

* TIPOS DE ATRIBUTOS: Os atributos podem ser de vários tipos, tais como:
- Simples
- Composto
- Multivalorado
- Determinante
- Identificador
entre outros.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

*ATRIBUTO SIMPLES / ATÔMICO: Não possui características especiais, e são indivisíveis.

Ex.: Nome da empresa, CPF, CNPJ.
EMPRESA -------(NOME)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

* ATRIBUTO COMPOSTO: É formado por itens menores, pode ser subdividido em outros atributos.
Ex.: Endereço da empresa.
EMPRESA-------ENDEREÇO---Rua.
		      ---CEP.
                      ---Bairro.	

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

* ATRIBUTO MULTIVALORADO: Pode conter mais de um valor para um mesmo registro (informação).
Ex.: Telefone da empresa.
EMPRESA------*Telefone

OBS: Atributo multivalorado geralmente é reresentado com um * na frente. EX.: *Telefone.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

*ATRIBUTO DETERMINANTE: Define de forma única as instâncias de uma entidade. Não podem existir duas instâncias com o mesmo valor nesse atributo.
Ex.: CNPJ da empresa, Código de Produto.
EMPRESA------(CNPJ) 
             ------

OBS: Atributo determinante geralmente é representado sublinhado.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

* ATRIBUTOS IDENTIFICADORES("CHAVES"): Uma chave identifica uma instância específica na classe de entidade.
Ex.: CPF, CódigoProduto, Matrícula, ID_Setor.
As chaves podem ser únicas ou não-únicas:
- Únicas: O valor dos dados da chave é único na entidade.Ex: cpf.
- Não-única: Usada para agrupar instâncias de classe em categorias.Ex: chave estrangeira.

As chaves podem ser compostas, consistindo de dois ou mais atributos combinados.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

* EXEMPLOS DE REPRESENTAÇÃO DE ENTIDADES E ATRIBUTOS:
+------------------+
|     Produto      |
+------------------+
| cod_produto (PK) |
| nome_produto     |
| Preço            |
| Qtde_Estoque     |
+------------------+

*PODEMOS TAMBÉM REPRESENTAR UMA ENTIDADE DE FORMA TEXTUAL:
Produto(Cod_Produto, Nome_Produto, Preço, Qtde_Estoque)
_______________________________________________________________________________________________________________________________________________________________________

* COMPARAÇÃO ENTRE ENTIDADES E RELAÇOES: ENTIDADESX RELAÇÃO:
- Uma entidade é um conceito do mundo real, como por exemplo um Cliente ou um Produto.
- Uma Relação é um conjunto de registros(tuplas), que representam um modelo de uma entidade.
- Cada registro representa uma instância de entidade, e o conjunto de todas as instâncias, com seus atributos, é chamado de Relação.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

*RELAÇÃO: Tabela bidimensional com  características específicas, composta por linhas e colunas, criada a partir de uma entidade.
Características de uma relação:
- Linhas contém dados sobre instâncias  de uma entidade(registros).
- Colunas contém dados sobre atributos da entidade(campos).
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

*RELAÇÃO - CARACTERÍSTIAS - CONTINUAÇAO
- Cada célula da tabela armazena um único valor.
- Todos os valores em uma coluna são do mesmo tipo(domínio de dados).
- Cada coluna possui um nome único.
- Não há duas linhas idênticas.
- As relações geralmente geram tabelas no banco.

* EXEMLO DE UMA RELAÇÃO:
		
		Produto
+------------+----------------+--------------+
| ID_Produto | Nome_Produto   | Preco_Produto|
+------------+----------------+--------------+
| 1000       | Mouse          | 15,00        |
| 1001       | Teclado        | 20,00        |
| 1002       | Webcam         | 65,00        |
+------------+----------------+--------------+

OBS: "TODA RELAÇÃO É UMA TABELA, MAS NEM TODA TABELA ÉUMA RELAÇÃO".
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

* RELAÇÃO - EXEMPLO COMPLETO:

+------------+---------------------+--------------+----------------+-------------+
| cod_produto| mercadoria          | qtde_estoque | fornecedor     | validade    |
+------------+---------------------+--------------+----------------+-------------+
| 189        | Azeitonas Pretas     | 50           | 05             | 02/08/2017  |
| 222        | Peixe Congelado      | 26           | 08             | 22/09/2016  |
| 236        | Enlatado             | 48           | 07             | 03/04/2018  |
+------------+---------------------+--------------+----------------+-------------+
PK = cod_produto
FK = fornecedor (referência à tabela Fornecedor)
_______________________________________________________________________________________________________________________________________________________________________

* O QUE SÃO RELACIONAMNETOS?
- As Entidades podem ser conectadas entre si por meio de Relacionamentos. Trata-se de uma estrutura que indica a associação de elementos de uma ou mais entidades.
- No modelo Entidade-Relacionamento (ER), os relacionamentos entre as entidades são frequentemente representados por verbos ou frases verbais para descrever a ação ou a interação entre as entidades. Esses verbos ajudam a dar sentido ao relacionamento e a entender como as entidades estão conectadas.

Por exemplo:

Funcionário trabalha em Setor
Aluno faz matrícula em Curso
Cliente realiza compra em Loja
O verbo descreve a ação que liga as entidades e fornece um contexto claro sobre o que está acontecendo no relacionamento.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

* POR QUE  PRECISAMOS DE REELACIONAMENTOS?
- Como os dados de diferentes entidades são armazenados em tabelas distintas, geralmente precisamos combinar duas ou ais tabelas para responder às perguntas específicas dos usuários.
- Por exemplo, podemos querer saber quais produtos,  e em qual quantidade, foram adquiridos por um cliente em particular. precisaremos então de dados das tabelas de clientes, de pedidos e produtos para obter essa informação.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

*REPRESENTANDO RELACIONAMENTOS:
- Representamos um Relacionamento em um DER por meio de um Losango que conecta uma ou mais Entidades.

+-------------------+   
|   Entidade A      |   
+-------------------+   
         |             
         |             
   ______|_________
  /                \
 /                  \
/   Relacionamento   \
\                    /
 \                  /
  \________________/
         |
         |
+-------------------+   
|   Entidade B      |   
+-------------------+   
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

* GRAU DE UM RELACIONAMENTO
O grau de um relacionamento define o número de entidades que participam do relacionamento. Assim, um relacionamento pode ser:
- Unário.
- Binário.
- Ternário.

Os relacionamentos mais comuns são os de grau 2(binários).
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

* RELACIONAMENTO UNÁRIO(RECURSIVO) OU AUTO-RELACIONAMENTO.

+-------------------+   
|       Pessoa      |________ 
+-------------------+        |
         |                   |
         |                   |
   ______|_________          |
  /                \         |
 /                  \        |
/     Se Casa        \       |
\                    /       |
 \                  /        |
  \________________/         |
	|		     |	
	|		     |	
	|		     | 
	|____________________|
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

* RELACIONAMENO BINÁIO:

+-------------------+   +-------------------+   +-------------------+
|   Funcionário     |---|   Trabalha        |---|      Setor        |
+-------------------+   +-------------------+   +-------------------+
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

* RELACIONAMENTO TERNÁRIO:


       +----------------+        +----------------+        +----------------+
       |     Médico     |        |    Paciente    |        |  Medicamento   |
       +----------------+        +----------------+        +----------------+
               \                        |                        /
                \                       |                       /
                 \                      |                      /
                  \                     |                     /
                   +--------------------+--------------------+
                                        |
                                  +-----v------+
                                  |  Prescreve |
                                  +------------+
_______________________________________________________________________________________________________________________________________________________________________


* RELACIONAMENTO ENTRE TABELAS: Uma tabela é relacionada com outras tabelas. Por exemplo, um produto é vendido em uma loja.

+------------------+             +-------------------+
|     Cliente      |             |      Vendas       |
+------------------+             +-------------------+
| ID_Cliente       |<-----------+| ID_Venda          |
| Nome_Cliente     |             | ID_Cliente        |
| CPF              |             | ID_Produto        |
+------------------+             | Data_Venda        |
                                 +-------------------+

O grau de um Relacionamento indicia o número de entidades envolvidas no relacionamento como por exemplo unário, binário e ternário.
_______________________________________________________________________________________________________________________________________________________________________

* EFETUANDO RELACIONAMENTO ENTRE MÚLTIPLAS TABELAS
- Cada linha de dados em uma tabela deve ser identificada de forma única usando-se uma Chave Primária(identificador exclusivo).
- Usamos uma Chave Estrangeira para relacionar os dados entre múltiplas tabelas.
- Usamos para isso o relacionamento entre chave primária de uma tabela com a chave estrangeira em outra tabela.
_______________________________________________________________________________________________________________________________________________________________________

* CHAVES: Uma chave consiste em uma ou mais colunas de uma relação cujos valores são usados para identificar de forma exclusiva uma linha ou conjunto de linha.
Pode ser única (identifica uma única linha) ou não-única (identifica um conjunto de linhas).
- Únicas (Unique): Candidata, Composta, Primária, Surrogada(substituta).
- Não-úncia (Non-Unique): Estrangeira.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

* Chave Candidata
- Atributo ou grupo de atributos com o potencial para se tornarem uma chave primária.
- Uma chave candidata que não seja usada como chave primária será conhecida como Chave Alternativa.
EX.: Campos Num_Matrícula e CPF em uma tabela de registros de alunos.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

* Chave Primária
- Chave candidata escolhida para ser a chave principal na relação.
- Identifica de forma exclusiva os registros em uma tabela, não podendo ter repetição de valores, nem tampouco valor nulo.
- Primary Key / PK.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

* Chave Estrangeira
- Coluna de uma tabela que estabelece um Relacionamento com a Chave Primária(PK) de outra tabela.
- É a partir da chave estrangeira (Foreign Key/ FK) que sabemos com qual registro em outra tabela um registro esta relacionado.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

* Chave Composta
- Chave que é composta de dois ou mais atributos(colunas).
- Geralmente empregada quando não é possível utilizar uma única coluna de uma tabela para identificar de forma exclusiva seus registros.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

* Chave Surrogada/Substituta
- Valor numérico, único, adicionado a uma relação para servir como chave primária.
- Não  possui significado para os usuários e geralmente fica escondida nas aplicações.
- As chaves substitutas são frequentemente usadas no lugar de uma chave primária composta.
_______________________________________________________________________________________________________________________________________________________________________

* INSTRUÇÕES PARA CRIAÇÃO DE CHAVES PRIMÁRIAS E ESTRANGEIRAS
- Não é possível haver valores duplicados em uma chave primária.
- No geral, não é possível alterar o valor de uma chave primária.
- Chaves estrangeiras são baseadas em valores de dados, classificadas como ponteiros lógicos.
- Um valor de uma chave estrangeira deve corresponder a um valor existente em uma chave primária associada (ou valor de chave única). Caso contrário, deve ser nulo (NULL).
- Uma chave estrangeira deve referenciar uma chave primária ou uma coluna de chave única.
_______________________________________________________________________________________________________________________________________________________________________

* EXEMPLO DE CHAVE PRIMÁRIA E CHAVE ESTRANGEIRA:

Aqui está uma representação simples de como seriam as tabelas Clientes, Vendas e Produtos, com as chaves primárias (PK) e chaves estrangeiras (FK) usando caracteres:

Tabela Clientes
+------------------+
|    Clientes      |
+------------------+
| cliente_id (PK)  |  <-- Chave primária
| nome             |
| email            |
| telefone         |
| endereco         |
+------------------+


Tabela Produtos
+------------------+
|    Produtos      |
+------------------+
| produto_id (PK)  |  <-- Chave primária
| nome_produto     |
| preco            |
| estoque          |
+------------------+


Tabela Vendas
+------------------+
|     Vendas       |
+------------------+
| venda_id (PK)    |  <-- Chave primária
| data_venda       |
| valor_total      |
| cliente_id (FK)  |  <-- Chave estrangeira (referencia Cliente)
| produto_id (FK)  |  <-- Chave estrangeira (referencia Produto)
+------------------+
Explicação:
Cliente (cliente_id):

A tabela Clientes tem cliente_id como chave primária. Este campo é único para cada cliente e identifica de forma exclusiva cada registro.
Produto (produto_id):

A tabela Produtos tem produto_id como chave primária, que também é única para cada produto.
Vendas (venda_id):

A tabela Vendas tem venda_id como chave primária. Além disso, ela contém chaves estrangeiras (cliente_id e produto_id), que referenciam as tabelas Clientes e Produtos, respectivamente.
cliente_id (FK) indica a quem a venda pertence (qual cliente fez a compra).
produto_id (FK) indica qual produto foi vendido.
Essa estrutura cria um relacionamento entre as tabelas, permitindo que você recupere facilmente dados de clientes, produtos e vendas de forma integrada.
_______________________________________________________________________________________________________________________________________________________________________

* O CONCEITO DE DOMÍNIO
- Definir tipos de dados.
- Especificar valores válidos em um campo.

+---------------------------------------------------+
|	           tbl_Clientes                     |
|---------------------------------------------------|
| Campo	       | Tipo de Dado    | Tamanho          |
| --------------------------------------------------|
| ID_Cliente   | Número          | 4 caracteres     | 
| --------------------------------------------------|
| Nome_Cliente | Caractere       | 40 caracteres    |
| --------------------------------------------------|
| CPF_Cliente  | Caractere       | 11 caracteres    |
|---------------------------------------------------| 
| Data_Nasc    | Data e Hora     | 8 caracteres     |
+---------------------------------------------------+
_______________________________________________________________________________________________________________________________________________________________________

* CARDINALIDADE: A cardinalidade diz respeito ao número de itens que se relacionam nas entidades. A cardinalidade pode ser máxima ou mínima, significando respectivamente os números mínimo e máximo de instâncias de cada entidade associadas no relacionamento.

- Cardinalidade Máxima: Trata-se do número máximo de instâncias de entidade que podem participar em um relacionamento. Pode ser 1 ou N (muitos).

- Cardinalidade Mínima: Número mínimo de instâncias de entidade que devem obrigatoriamente participar em um relacionamento; zero é participação opcional e um é obrigatória.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

* SIMBOLOGIA PARA CARDINALIDADES.
- Usando a notação de Peter Chen:

Cardinalidade Mínima ----> (1, 1) -------> Cardinalidade Máxima

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
* NOTAÇÃO "PÉ DE GALINHA"
- Um e apenas um (1)

- De UM A MUITOS(1 .. *)

- Zero ou um (0 .. 1)

- De zero a muitos (0 .. *)
			      



	


